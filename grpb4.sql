Select * from aisles;
Select * from customers;
Select * from department;
Select * from orders;
Select * from products;


--1. On which days of the week are condoms mostly sold
--change data type from Int to varchar
Alter table orders
Alter column order_dow type varchar;

--update  int values to varchar
Update orders
set order_dow = Case 
                When order_dow = '0' then 'Sunday'
                When order_dow = '1' then 'Monday'
                When order_dow = '2' then 'Tuesday'
                When order_dow = '3' then 'Wednesday'
                When order_dow = '4' then 'Thursday'
                When order_dow = '5' then 'Friday'
                When order_dow = '6' then 'Saturday'
                else Null
                End

Select order_dow day_of_week, count(p.product_id) no_sold
from orders o
join products p on o.product_id=p.product_id
where product_name ILIKE '%condom%' or product_name ILIKE '%condoms%'
group by day_of_week
order by no_sold desc
limit 2


--2. How have the orders changed over time(monthly)
Select TO_CHAR(order_date, 'YYYY, Month') monthly_orders, count(order_id) orders
from orders
group by TO_CHAR(order_date, 'YYYY, Month')
order by to_date(TO_CHAR(order_date, 'YYYY, Month'), 'YYYY, Month')



--3 what department has the highest average spend per customer
select department, round(avg(unit_price*quantity), 1) avg_spend
from department d
join products p on d.department_id=p.department_id
join orders o on o.product_id=p.product_id
group by department
Order by avg_spend desc
Limit 1


--4. Which type of condom do customers prefer
select product_name, count(order_id) preferred_condom
from products p
join orders o on p.product_id=o.product_id
where product_name ILIKE '%condom%' 
group by product_name
order by preferred_condom desc


--5. Which aisle contains the most organic product
Select aisle Aisle, count(p.product_id) organic_product
from aisles a
join products p on a.aisle_id=p.aisle_id
where product_name ILIKE '%organic%'
group by Aisle
order by organic_product desc
limit 1


---6. Which aisle can I find non alcohol drinks
Select aisle Aisle, count(p.product_id) no_sold
from aisles a
join products p on a.aisle_id=p.aisle_id
where product_name ILIKE '%non-alcoholic%' or product_name ILIKE '%non alcoholic%'
group by Aisle
order by no_sold desc

select * from products
where product_name ILIKE '%non-alcoholic%' 
limit 10


select * from products
where product_name ILIKE '%non alcoholic%'
limit 10

select * from products
where product_name ILIKE '%non-alcohol%'
limit 10

select * from products
where product_name ILIKE '%no alcohol%'
limit 10

select * from products
where product_name ILIKE '%non alcohol%'
limit 10


--8. Calculate the profit and revenue generated by each department
select department, sum((unit_price - unit_cost) * quantity) profit,
sum(unit_price * quantity) revenue
from department d
join products p on d.department_id=p.department_id
join orders o on o.product_id=p.product_id
group by department;

--9. When was the last time Mattie Speke placed an order and what is the order status?
Select first_name, last_name, order_date last_date, order_status 
from customers c
join orders o on c.customer_id=o.customer_id
where first_name = 'Mattie' and last_name = 'Speke'
order by last_date desc 
limit 1


Select concat(first_name, ' ', last_name) as customer_name, order_date last_date, order_status 
from customers c
join orders o on c.customer_id=o.customer_id
where first_name = 'Mattie' and last_name ='Speke'
order by last_date desc
limit 1

--10. What is the total revenue and profit generated in each month in 2023
select to_char(order_date, 'Month') monthly_summary, sum((unit_price - unit_cost) * quantity) profit, sum(unit_price * quantity) revenue
from orders o
join products p on o.product_id=p.product_id
where extract(Year from order_date) = 2023
group by monthly_summary
order by monthly_summary;


WITH calc AS (
    SELECT o.order_id,
    o.customer_id,
    p.department_id,
    o.quantity,
    o.order_date,
    p.unit_price,
    p.unit_cost,
    o.quantity * p.unit_price AS order_total_amount,
    (p.unit_price - p.unit_cost) * quantity AS Profit
    from products p
INNER JOIN orders o ON p.product_id = o.product_id
),
agg AS (
    SELECT TO_CHAR(order_date, 'YYYY, Month') as monthly_orders,
    SUM(order_total_amount) AS revenue,
    SUM(Profit) AS total_profit
    from department d 
    join calc c on d.department_id = c.department_id
    where extract(YEAR from order_date) = 2023
    group by TO_CHAR(order_date, 'YYYY, Month')
    order by to_date(TO_CHAR(order_date, 'YYYY, Month'), 'YYYY, Month'))

select * from agg


